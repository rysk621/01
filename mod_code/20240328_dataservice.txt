HttpComponentsClientHttpRequestFactory factory = new HttpComponentsClientHttpRequestFactory();
factory.setConnectionRequestTimeout(5000 * 1000); // 커넥션풀에서 사용 가능한 연결을 가져오기 위해 대기하는 최대 시간
factory.setConnectTimeout(5000); // 커넥션 최대 시간
factory.setReadTimeout(5000); // 읽기 최대 시간
...

return new RestTemplate(factory);


















	public void dummyCurrent() {
		System.out.println("### dummy current info");
		List<WorkerCur> wList = workerCurRepo.findAll();
		int idx = new Random().nextInt(0,5);
		for (WorkerCur wC : wList) {
			boolean asc = new Random().nextBoolean();
			if (wC.getUsercode() > 20) {
				wC.setLatitude(WorkerEmul.latArray[0][idx]);
				wC.setLongitude(WorkerEmul.lonArray[0][idx]);
			} else {
				wC.setLatitude(WorkerEmul.latArray[1][idx]);
				wC.setLongitude(WorkerEmul.lonArray[1][idx]);
			}
			if(wC.getUsercode() % 3 != 0) {
				if(asc) wC.setStatus(WorkerStatus.SAFE);
				else wC.setStatus(WorkerStatus.CAUTION);
			}else if(wC.getUsercode() % 2 != 0) wC.setStatus(WorkerStatus.WARNING);
			wC.setRegisterDate(new Date());
			if(wC.getUsercode() == 1) workerCurRepo.saveAndFlush(wC);
			if (asc == true) {
				idx++;
				if (idx >= 19) {
					idx = 19;
					asc = false;
				}
			} else {
				idx--;
				if (idx <= 0) {
					idx = 0;
					asc = true;
				}
			}
		}
	}